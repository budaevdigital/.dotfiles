############## PROMPT OPTIONS ################

# Эффекты
dimefct='\[\e[0;2m\]' # Standart - Muted
blinfct='\[\e[0;5m\]' # Blink

# Цвета
# Пояснения:
# \[\e[0;A;38or48;255;255m\]
# 255;255 = номер цвета
# 38 or 48 (в зависимости от цвета, может и не быть):
#  38 = foreground color
#  48 = background color
# A - Это эффект (идёт после '0' может и не быть):
#  1 = Жирный текст
#  2 = Приглушённый текст
#  3 = Курсив
#  4 = Подчеркнутый
#  5 = Мигающий
#  53 = Черта над текстом
#  7 = Инверсия цвета
txtgre='\[\e[0;38;5;115m\]' # LightGreen
txtpch='\[\e[0;1;38;5;210m\]' # Peach - Bold
txtvio='\[\e[0;2;38;5;98m\]' # Dark Violet - Muted
txteme='\[\e[0;38;5;37m\]' # Emerald
txttox='\[\e[0;38;5;41m\]' # Toxic
txtcre='\[\e[0;1;38;2;97m\]' #  Cream - Bold
txtpic='\[\e[0;1;38;5;205m\]' # Pink - Bold
txtend='\[\e[0;38;5;255m\]' # Best White

# Фон
bgcolor_turq_history='\[\e[0;38;5;60;48;5;37m\]'  # Turquoise (Бирюзовый) background color
bgcolor_turq='\[\e[0;2;38;5;53;48;5;37m\]'  # Turquoise (Бирюзовый) background color
color_turq='\[\e[0;38;5;37m\]'    # Turquoise (Бирюзовый) foreground color
color_turq='\[\e[0;38;5;37m\]'    # Turquoise (Бирюзовый) foreground color


# Prompt Элементы
histnumb='\!' # Показывает номер команды в истории
comdnumd='\#' # Показывает номер команды в терминале
startprt='\$' # Начальная строка ввода команды
gitfirst='$(git branch 2>/dev/null | grep '"'"'^*'"'"' | colrm 1 2)' # $(git symbolic-ref HEAD 2>/dev/null)
gitsbrch='$(git_branche)' # Показывает ветку в гит.
timeshrt='\A' # Время без секунд
username='\u'
hostshrt='\h' # Хостнейм без .
workdirc='\w' # Список всех директорий
newline='\n' # Новая строка
poin1prt='▶'
poin2prt='➜' 
curntdir='\W' # Показывает текущюю директорию
solidtreerh=''  #solidtreerh
solidtreelh=''
treerh='' # >
spaces=' '
modifygitfiles='' # в виде иконки пламени
iconfire=''
startlineicon=''
startlineicon2=''
startlineicon3=''
startlineicon4=''
startlineicon5=''
startlineicon6=''

# Other Prompt Elements
# \v # bash version
# \l # terminal 
# \s # name shell
# \a # bell 
# \r # carriage return
# $? # exit status
# $('sample') # start 'sample' comand
# $(ip route get 1.1.1.1 | awk -F"src " '"'"'NR==1{split($2,a," ");print a[1]}'"'"') # ip address

# Заранее определённые блоки командной строки
timeC="${dimefct}[${dimefct}${timeshrt}${dimefct}]"
userC="${dimefct}[${dimefct}${username}${dimefct}@${dimefct}${hostshrt}${dimefct}]${dimefct}>"
gitbC="${txtpch}${gitfirst}"
wdirC="${txteme}${workdirc}"
pontC="${dimefct}${poin2prt}"
hisnC="${txtvio}${histnumb}"
crntC="${dimefct}.${dimefct}/"
crdrC="${txtcre}${curntdir}"
strtC="${txttox}${poin2prt}"

BKgrspace="${bgcolor_turq}${spaces}" # Пустой пробел с окрашенным фоном

bkghisnC="${bgcolor_turq_history}${histnumb}"
bkgcrntC="${bgcolor_turq_history}.${bgcolor_turq_history}/"
bkgcrdrC="${bgcolor_turq}${curntdir}"
bkgstrtC="${color_turq}${solidtreerh}"
bkgendstrC="${color_turq}${treerh}"

FTline="${color_turq}${startlineicon}"

# Красный цвет пользователя для root
if [ "${UID}" -eq "0" ]; then 
  userC="${dimefct}[${txtpic}${username}${dimefct}]${dimefct}>"
fi

# Запрещаем vertualenv'у вмешиваться в наше приглашение командной строки
export VIRTUAL_ENV_DISABLE_PROMPT=1

# Сокращать путь к текущему каталогу в строке терминала
export PROMPT_DIRTRIM=5

function _prompt_command() {
    # Запускаем функцию для получения названия виртуального окружения и отображения в строке
    virtualenv_part=$(_virtualenv_prompt)
    addgitfiles=$(_is_modify_git_files)
    first_line="$virtualenv_part${timeC}${userC} ${gitbC} ${addgitfiles} ${wdirC}${newline}"
    second_line="${BKgrspace}${bkghisnC}${BKgrspace}${bkgcrntC}${bkgcrdrC}${BKgrspace}${bkgstrtC}${bkgendstrC} ${txtend}"
    PS1="${first_line}${second_line}"
}

function _virtualenv_prompt() {
    if [[ $VIRTUAL_ENV != "" ]]
    then
        echo ${dimefct}"["${txtgre}"${VIRTUAL_ENV##*/}"${dimefct}"]"
    else
        echo ""
    fi
}

function _is_modify_git_files() {
    # Выводит 1 если есть совпадения (-с)
    # Не выводит ошибки (аргумент -s)
    value=$(git status 2>/dev/null | grep -cs "Changes not staged")  
    if [ $value -eq 1 ]
    then
        echo ${txtpch}${modifygitfiles}
    else
        echo ""
    fi

}

PROMPT_COMMAND=_prompt_command
