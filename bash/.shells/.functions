############## FUNCTIONS OPTIONS ################

# Показывает список (20 первых) самых больших файлов в каталоге
function find_largest_files() {
    du -h -x -s -- * | sort -r -h | head -20;
}

function print_ip_adress(){
	# 2>/dev/null - убирает вывод таблицы curl запроса в консоль. Только ip
	get_ip=$(curl ifconfig.me 2>/dev/null);
	echo "Мой IP адресс: $get_ip";
}

# Инициализация проекта (каталога и шаблонов гит файлов)
# Аргументом принимает название директории
function git_init() {
    if [ -z "$1" ]; then
        printf "%s\n" "Укажите имя директории";
    else
        mkdir "$1";
        builtin cd "$1";
        pwd;
        git init;
        touch readme.md .gitignore LICENSE;
        echo "# $(basename $PWD)" >> readme.md;
    fi
}

function see_vpn_is_active() {
	# задаём переменную в которой ищем запущен ли wireguard
	isactive=$(sudo wg show | grep -c wg0);
	if sudo wg show | grep -c wg0 2>&1 >/dev/null; then
		# /dev/null 2>&1 - отключает вывод у указанного уровня (2 и 1) вывода в терминал
		wg-quick down wg0 > /dev/null 2>&1 && echo "VPN Deactivate";
	# если переменная equal (равна) False
	elif [ $isactive -eq 0 ]; then
		wg-quick up wg0 > /dev/null 2>&1 && echo "VPN Activate";
	fi
}

function mount_webdav() {
  # Проверяем, существуют ли целевые директории монтирования, и, если нет, создаем их.
  if [ ! -d "$WEBDAV_DIR" ]; then
    echo "Создание $WEBDAV_URL";
    mkdir $WEBDAV_URL;
  fi
  # Монтируем WebDAV каталоги
  echo "Монтирование $WEBDAV_URL";
  sudo mount -t davfs -o rw $WEBDAV_URL $WEBDAV_DIR;
  cd $WEBDAV_DIR;
  pwd;
}

# Принимает на вход два аргумента:
# $1 - файл (архив) для бэкапа
# $2 - директорию, куда нужно сохранить бэкап
function backup_zip_file_on_mailcloud() {
	if [ -d "$WEBDAV_DIR" ]; then
		NAME_DIR=$(date +"%m-%d-%Y");
		FILE_BACKUP=$1;
		DIR_BACKUP=$2;
    if [ ! -d "$NAME_DIR" ]; then
      mkdir $NAME_DIR;
    else
      rm -rf $NAME_DIR;
    fi
    echo "Переносим $1 в: $2/$NAME_DIR"
    mv $1 "$2/$NAME_DIR"
	fi
}

function unmount_webdav() {
  # Размонтирование WebDAV
  echo "Размонтирование $WEBDAV_URL";
  sudo umount $WEBDAV_DIR;
  # После размонтирования, удаляем пустой каталог
  rm -r $WEBDAV_DIR;
  cd ~;
}

function zip_files(){
  NAME_ZIP=$1
  DIR_FOR_ZIP=$2
  if [ -e "$DIR_FOR_ZIP/$NAME_ZIP.zip" ]; then
    rm -rf "$DIR_FOR_ZIP/$NAME_ZIP.zip";
  fi
  zip -r "$NAME_ZIP.zip" "$DIR_FOR_ZIP/*";
  echo "Архив $NAME_ZIP.zip создан!";
  ll -la | grep $NAME_ZIP;
}
