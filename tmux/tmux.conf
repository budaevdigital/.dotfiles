# Прокручиваем вверх мышью
set-option -g mouse on
set -g set-clipboard on

# Буфер обратной прокрутки
set -g history-limit 10000

# tmux отображает вещи в 256 цветах
set-option -g default-terminal 'screen-256color'
set-option -g terminal-overrides 'screen-256color'

# разрешить навигацию между словами с опцией
set-window-option -g xterm-keys on

# делает timelapse команды короче
set -g escape-time 10

# Разрешить использование клавиши со стрелкой сразу после смены окна
set-option -g repeat-time 0

# Установить окна уведомлений
set -g monitor-activity on
set -g visual-activity on

# Обновить файлы в фокусе (используя для vim)
set -g focus-events on

# Интервал обновления статуса
set -g status-interval 1

# Уменьшить время ожидания клавиши Escape. Вам понадобится это для neovim.
set-option escape-time 40

######### ДИСПЛЕЙ ##########
# заново перенумеровать окна, когда окно закрыто
set -g renumber-windows on    

######### ТЕМА ##########
set -g status-bg colour237
set -g status-fg colour246
set-option -g pane-active-border-style fg=colour239
set-option -g pane-border-style fg=colour237
set -g mode-style fg=colour235,bg=colour66
set-option -g message-style bg=colour66,fg=colour235

set-option -g status-justify 'left'
set-option -g status-left-style none
set-option -g status-left-length '80'
set-option -g status-right-style none
set-option -g status-right-length '80'

set -g status-right '#{cpu_bg_color} CPU: #{cpu_icon} #{cpu_percentage} | #{ram_bg_color} RAM: #{ram_icon} #{ram_percentage} | %a %h-%d %H:%M '

# set-option -g status-right '#(gitmux -cfg ~/.gitmux.conf "#{pane_current_path}") %H:%M:%S '
# set-window-option -g window-status-separator " "
# set-window-option -g window-status-current-format "#[fg=colour66]#W"
# set-window-option -g window-status-format "#W"

######## КОМАНДЫ #########

# `prefix` - это комнда по-умолчанию (Ctrl+b)
# можно обойти prefix и использовать свои значения команд
# задаётся через параметр `-n`
# например, `bind -n C-j ...` = будет срабатывать на нажания Ctrl+j 

# Перемещение окна (`prefix`+ > or <)
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1

# Переключение между текущем и предыдущем окном
# для переключения: `prefix` + Space
bind Space last-window

# Переключение между сеансами (`prefix` + Ctrl + Space)
bind-key C-Space switch-client -l 

# Разбить текущую панель на своё собственное окно
# Есть команда `prefix` + !

# Соединяет панели в одно окно (`prefix` + j (or J) и номер)
# - по горизонтали
bind j choose-window 'join-pane -h -s "%%"'
# - по вертикали
bind J choose-window 'join-pane -s "%%"'


######## ПЛАГИНЫ #########

# Менеджер всех плагинов
set -g @plugin 'tmux-plugins/tpm'
# Статус бар загруженности CPU, GPU и RAM
set -g @plugin 'tmux-plugins/tmux-cpu'

# Инициализация менеджера плагинов
run '~/.config/tmux/plugins/tpm/tpm'
